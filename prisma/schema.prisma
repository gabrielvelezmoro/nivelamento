// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     Int     @id @default(autoincrement())
  name   String?
  cpf    String  @unique
  passwd String

  UserProfile UserProfile[]
  Recipient   Recipient[]
  Package     Package[]
  Delivery    Delivery[]
}

model Profile {
  id               Int                @id @default(autoincrement())
  ds_profile       String             @unique
  UserProfile      UserProfile[]
  Recipient        Recipient[]
  Package          Package[]
  RecipientAddress RecipientAddress[]
}

model UserProfile {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [id_user], references: [id])
  id_user    Int
  profile    Profile @relation(fields: [id_profile], references: [id])
  id_profile Int
}

model Address {
  id        Int       @id @default(autoincrement())
  ds_city   String
  ds_cep    String
  ds_street String
  ds_number String
  Package   Package[]
}

model Recipient {
  id               Int                @id @default(autoincrement())
  cep              String
  address          Profile            @relation(fields: [id_address], references: [id])
  id_address       Int
  User             User?              @relation(fields: [userId], references: [id])
  userId           Int?
  Package          Package[]
  Delivery         Delivery[]
  RecipientAddress RecipientAddress[]
}

model RecipientAddress {
  id           Int        @id @default(autoincrement())
  address      Profile    @relation(fields: [id_address], references: [id])
  id_address   Int
  Recipient    Recipient? @relation(fields: [id_recipient], references: [id])
  id_recipient Int?

  Package  Package[]
  Delivery Delivery[]
}

model Package {
  id           Int       @id @default(autoincrement())
  status       String
  Recipient    Recipient @relation(fields: [id_recipient], references: [id])
  id_recipient Int
  Address      Address   @relation(fields: [id_address], references: [id])
  id_address   Int

  Delivery Delivery[]
  User     User?      @relation(fields: [userId], references: [id])
  userId   Int?

  Profile            Profile?          @relation(fields: [profileId], references: [id])
  profileId          Int?
  RecipientAddress   RecipientAddress? @relation(fields: [recipientAddressId], references: [id])
  recipientAddressId Int?
}

model Delivery {
  id                 Int               @id @default(autoincrement())
  status             String
  User               User?             @relation(fields: [id_postman], references: [id])
  id_postman         Int?
  Recipient          Recipient         @relation(fields: [id_recipient], references: [id])
  id_recipient       Int
  Package            Package?          @relation(fields: [id_package], references: [id])
  id_package         Int?
  RecipientAddress   RecipientAddress? @relation(fields: [recipientAddressId], references: [id])
  recipientAddressId Int?
}
